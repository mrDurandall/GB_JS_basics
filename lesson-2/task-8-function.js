// В задании не сказано, какое значение может принимать степень, так что рассмотрим варианты с положительными и отрицательными целыми числами
// Дробные степени рассматривать не станем. Хотя есть подозрение, что отрицательные  - это тоже уже выходит за рамки задания ;)

function exponentiation(val, pow) {
    // На всякий случай сразу приведем значения переменных к числам
    val = Number(val);
    pow = Number(pow);
    // Дальше проверим значение степени:
    // Сначала рассмотрим случаи "исключения":
    // при степени 0 всегда возвращаем 1
    if (pow == 0) {
        return 1;
    // При степени 1 всегда возвращаем само число
    } else if (pow == 1) {
        return val;
    // При отрицательном значении степени возвращаем 1 деленную на функцию от числа в степени -pow (это уже рекурсивный вызов)
    } else if (pow < 0) {
        return 1 / exponentiation(val, -pow)
    // Предельное значение - число в степени 2, тут просто возвращается число, умноженное само на себя
    } else if (pow == 2) {
    // Если степнь больше двух, то возвращаем число умноженное на функци числа в степени pow-1
    // Таким образом мы доходим до степени 2 и начинаем умножать число на себя столько раз, сколько у нас глубина рекурсии.
        return val * val;
    } else {
        return val * exponentiation(val, pow-1)
    }
}